services:
  codewitus_db:
    image: postgres:16-bookworm
    ports:
      - "${PG_HOST_PORT:-5432}:5432"
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=codewitus_user
      - POSTGRES_DB=codewitus_db
    networks:
      - codewitus
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    depends_on:
      - codewitus_db
    build:
      dockerfile: Dockerfile.backend
      target: dev
      args:
        MODE: dev
    environment:
      - DB_HOST=codewitus_db
      - DB_USER=codewitus_user
      - DB_PASSWORD=12345
      - DB_NAME=codewitus_db
      - DB_PORT=5432
      - API_PORT=3000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - FRONTEND_URL=http://localhost:80
      - NODE_ENV=dev
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - 3000:3000
    develop:
      watch:
        - path: package.json
          action: rebuild
        - path: package-lock.json
          action: rebuild
        - path: api/
          target: /codewit/api/
          action: sync
        - path: lib/
          target: /codewit/lib/
          action: sync
    networks:
      - codewitus
    stdin_open: true
    tty: true

    # Runs migrations & seeds, exits 0 on success (no restart)
  migrator:
    build:
      dockerfile: Dockerfile.backend
      target: migrator
      args:
        MODE: dev
    depends_on:
      codewitus_db:
        condition: service_healthy
    environment:
      - DB_HOST=codewitus_db
      - DB_USER=codewitus_user
      - DB_PASSWORD=12345
      - DB_NAME=codewitus_db
      - DB_PORT=5432
      - NODE_ENV=dev
      - SEQ_ENV=dev
    command: >
      sh -c "
        npx sequelize-cli db:migrate --env dev &&
        npx sequelize-cli db:seed:all --env dev
      "
    restart: "no"
    networks: [codewitus]

  frontend:
    depends_on:
      - app
      - codewitus_db
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: dev
      args:
        MODE: dev
    restart: unless-stopped
    ports:
      - 3001:3001
    develop:
      watch:
        - path: package.json
          action: rebuild
        - path: package-lock.json
          action: rebuild
        - path: client/
          target: /codewit/client/
          action: sync
        - path: lib/
          target: /codewit/lib/
          action: sync
    environment:
      - API_PORT=80
      - API_HOST=nginx
    networks:
      - codewitus
    stdin_open: true
    tty: true

  codeeval:
    depends_on:
      - frontend
      - app
      - codewitus_db
    build:
      context: ../../codeval/
      dockerfile: Dockerfile
      args:
        MODE: dev
    restart: unless-stopped
    environment:
      - HOST=0.0.0.0
      - PORT=3002
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENABLE_CPP=false
    ports:
      - 3002:3002
    networks:
      - codewitus

  nginx:
    depends_on:
      - frontend
      - app
      - codewitus_db
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - codewitus
    stdin_open: true
    tty: true

  redis:
    image: redis:7.4-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - codewitus

networks:
  codewitus:
    driver: bridge
